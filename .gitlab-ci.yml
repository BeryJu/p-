# Global Variables
stages:
  - build-build-image
  - test
  - build
  - docs
image: docker.pkg.beryju.org/p2-build-base:latest
services:
  - postgres:latest
  - redis:latest

variables:
  POSTGRES_DB: p2
  POSTGRES_USER: p2
  POSTGRES_PASSWORD: "EK-5jnKfjrGRm<77"


create-build-image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"docker.$NEXUS_URL\":{\"auth\":\"$NEXUS_AUTH\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.build-base --destination docker.pkg.beryju.org/p2-build-base:latest --destination docker.pkg.beryju.org/p2-build-base:0.1.1
  stage: build-build-image
  only:
    refs:
      - tags
      - /^version/.*$/

isort:
  script:
    - isort -c -sg env
  stage: test
migrations:
  script:
    - python manage.py migrate
  stage: test
prospector:
  script:
    - prospector
  stage: test
pylint:
  script:
    - pylint p2
  stage: test
coverage:
  script:
    - coverage run manage.py test
    - coverage report
    - coverage html
  stage: test

package-docker:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"docker.$NEXUS_URL\":{\"auth\":\"$NEXUS_AUTH\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination docker.pkg.beryju.org/p2:latest --destination docker.pkg.beryju.org/p2:0.1.1
  stage: build
  only:
    - tags
    - /^version/.*$/
package-helm:
  stage: build
  script:
    - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
    - helm init --client-only
    - helm dependency build helm/p2
    - helm package helm/p2
    - ./manage.py nexus_upload --method put --url $NEXUS_URL --auth $NEXUS_AUTH --repo helm *.tgz
  only:
    - tags
    - /^version/.*$/
# package:
#   before_script:
#     - apt update
#     - apt install -y --no-install-recommends build-essential debhelper devscripts equivs python3 python3-dev python3-pip libsasl2-dev libldap2-dev
#     - mk-build-deps version/control
#     - apt install ./*build-deps*deb -f -y
#     - "python3 -m pip install -U virtualenv pip"
#     - "virtualenv env"
#     - "source env/bin/activate"
#     - "pip3 install -U -r requirements.txt -r requirements-dev.txt"
#   image: ubuntu:18.04
#   script:
#     - debuild -us -uc
#     - cp ../p2*.deb .
#     - ./manage.py nexus_upload --method post --url $NEXUS_URL --auth $NEXUS_AUTH --repo apt p2*deb
#   artifacts:
#     paths:
#       - p2*deb
#     expire_in: 2 days
#   stage: build
#   only:
#     - tags
#     - /^version/.*$/

# docs:
#   stage: docs
#   only:
#     - master
#     - tags
#     - /^version/.*$/
#   environment:
#     name: docs
#     url: "https://p2.beryju.org/docs/"
#   script:
#     - apt update
#     - apt install -y rsync
#     - "mkdir ~/.ssh"
#     - "cp .gitlab/known_hosts ~/.ssh/"
#     - "pip3 install -U -r requirements-docs.txt"
#     - "eval $(ssh-agent -s)"
#     - 'echo "${CI_SSH_PRIVATE}" | ssh-add -'
#     - mkdocs build
#     - 'rsync -avh --delete site/* "beryjuorg@ory1-web-prod-1.ory1.beryju.org:p2.beryju.org/docs/"'

# web:
#   stage: docs
#   only:
#     - master
#     - tags
#     - /^version/.*$/
#   environment:
#     name: docs
#     url: "https://p2.beryju.org/"
#   script:
#     - apt update
#     - apt install -y rsync
#     - "mkdir ~/.ssh"
#     - "cp .gitlab/known_hosts ~/.ssh/"
#     - "eval $(ssh-agent -s)"
#     - 'echo "${CI_SSH_PRIVATE}" | ssh-add -'
#     - 'rsync -avh --delete web/* "beryjuorg@ory1-web-prod-1.ory1.beryju.org:p2.beryju.org/"'
