---
apiVersion: k8s.beryju.org/v1alpha1
kind: P2
metadata:
  # Name of the instance.
  name: example-p2
spec:
  # Version of p2 to run. Can be set to a static version of `latest`, but downgrades are not supported.
  version: 0.8.0rc1

  # Secret key used to sign cookies, etc. Should be at least 50 characters long.
  # Use something like https://passwordsgenerator.net/ to generate this
  secret_key: "r-9k#x4tkk2e8%=(9hf#^v4&=5z2)^gzn^)l*_=z+&0a97kwd8"
  # Same goes for these credentials, they should be randomly generated
  redis:
    password: "ThisIsNotASecurePassword!"
  postgresql:
    postgresqlPassword: "ThisIsNotASecurePassword!"

  config:
    # Enable error reporting (errors are sent to sentry.beryju.org)
    error_reporting: true

    # Only allow single sign-on, disable internal authentication
    external_auth_only: false

    # SSO Configuration
    # using the OpenID-Connect standard
    # Callback URL: <base url>/_/oidc/callback/
    oidc:
      enabled: false
      client_id: ""
      client_secret: ""
      auth_url: ""
      token_url: ""
      user_url: ""

  # Determines how many instances of each component should be started.
  deployment:
    webInstances: 1 # One web instance per CPU Core
    workerInstances: 1 # This depends on your load, 1-2 workers are fine for most installs.
    # To disable tier0, set the values below to 0
    tier0Instances: 2
    grpcInstances: 1 # One GRPC instance is enough for 8 tier0 instances.

  ingress:
    enabled: true
    serve:
      hosts:
        - "i.p2.local" # Domains routed to tier0
    hosts:
      - "p2.local" # Domains routed to p2
      - "*.p2.local" # Wildcard is used for domain-style s3 access.
    # TLS Configuration is needed if you use cert-manager for example
    # tls:
    #  - secretName: example-p2-tls
    #    hosts:
    #      - p2.local
