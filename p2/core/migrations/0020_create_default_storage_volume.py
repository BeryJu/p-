# Generated by Django 2.2.1 on 2019-05-17 09:58

from django.db import migrations


def create_default_storage(apps, schema_editor):
    from django.contrib.auth.models import User
    from django.conf import settings
    from p2.lib.reflection import class_to_path
    from p2.storage.local.constants import TAG_ROOT_PATH
    from guardian.conf import settings as guardian_settings
    from p2.storage.local.controller import LocalStorageController
    Storage = apps.get_model('p2_core', 'Storage')
    Volume = apps.get_model('p2_core', 'Volume')
    # Use local storage if we're in debug
    storage_path = '/storage/' if not settings.DEBUG else './storage/'
    # Only apply if no storage exists
    if Storage.objects.all().exists():
        return
    storage = Storage.objects.create(
        name='local-storage',
        controller_path=class_to_path(LocalStorageController),
        tags={
            # /storage/ is always mounted
            TAG_ROOT_PATH: storage_path
        })
    Volume.objects.create(
        name='default-volume',
        storage=storage)

class Migration(migrations.Migration):

    dependencies = [
        ('p2_core', '0019_auto_20190517_1013'),
    ]

    operations = [
        migrations.RunPython(create_default_storage)
    ]
