apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "p2.fullname" . }}-worker
  labels:
    app.kubernetes.io/name: {{ include "p2.name" . }}
    helm.sh/chart: {{ include "p2.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    k8s.p2.io/deployment: worker
spec:
  replicas: {{ .Values.deployment.workerInstances }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "p2.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "p2.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        k8s.p2.io/component: worker
    spec:
      serviceAccountName: {{ include "p2.fullname" . }}-cni
      securityContext:
        fsGroup: 100
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "p2.fullname" . }}-config
        - name: media-storage
          persistentVolumeClaim:
            claimName: {{ include "p2.fullname" . }}-pvc-app-storage
      containers:
        - name: {{ .Chart.Name }}
          image: "docker.beryju.org/p2/server:{{ .Values.version }}"
          imagePullPolicy: IfNotPresent
          command: ["./manage.py", "worker"]
          volumeMounts:
            - mountPath: /etc/p2
              name: config-volume
            - mountPath: /storage
              name: media-storage
          env:
            - name: P2_REDIS_HOST
              value: "{{ .Release.Name }}-redis-master"
            - name: P2_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-redis"
                  key: redis-password
            - name: P2_PSQL_DBNAME
              value: "{{ .Values.postgresql.postgresqlDatabase }}"
            - name: P2_PSQL_USERNAME
              value: "{{ .Values.postgresql.postgresqlUsername }}"
            - name: P2_PSQL_HOST
              value: "{{ .Release.Name }}-postgresql"
            - name: P2_PSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgresql"
                  key: postgresql-password
            - name: P2_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ template "p2.fullname" . }}"
                  key: secret_key
          resources:
            requests:
              cpu: 100m
              memory: 350M
            limits:
              cpu: 200m
              memory: 425M
