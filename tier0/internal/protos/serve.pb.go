// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/serve.proto

package p2

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServeRequest struct {
	Session              string            `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Url                  string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Headers              map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ServeRequest) Reset()         { *m = ServeRequest{} }
func (m *ServeRequest) String() string { return proto.CompactTextString(m) }
func (*ServeRequest) ProtoMessage()    {}
func (*ServeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51df4688294909e2, []int{0}
}

func (m *ServeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServeRequest.Unmarshal(m, b)
}
func (m *ServeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServeRequest.Marshal(b, m, deterministic)
}
func (m *ServeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServeRequest.Merge(m, src)
}
func (m *ServeRequest) XXX_Size() int {
	return xxx_messageInfo_ServeRequest.Size(m)
}
func (m *ServeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServeRequest proto.InternalMessageInfo

func (m *ServeRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *ServeRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ServeRequest) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

type ServeReply struct {
	Session              string            `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Matching             bool              `protobuf:"varint,2,opt,name=matching,proto3" json:"matching,omitempty"`
	Data                 []byte            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Headers              map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ServeReply) Reset()         { *m = ServeReply{} }
func (m *ServeReply) String() string { return proto.CompactTextString(m) }
func (*ServeReply) ProtoMessage()    {}
func (*ServeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_51df4688294909e2, []int{1}
}

func (m *ServeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServeReply.Unmarshal(m, b)
}
func (m *ServeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServeReply.Marshal(b, m, deterministic)
}
func (m *ServeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServeReply.Merge(m, src)
}
func (m *ServeReply) XXX_Size() int {
	return xxx_messageInfo_ServeReply.Size(m)
}
func (m *ServeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ServeReply.DiscardUnknown(m)
}

var xxx_messageInfo_ServeReply proto.InternalMessageInfo

func (m *ServeReply) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *ServeReply) GetMatching() bool {
	if m != nil {
		return m.Matching
	}
	return false
}

func (m *ServeReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ServeReply) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func init() {
	proto.RegisterType((*ServeRequest)(nil), "p2.ServeRequest")
	proto.RegisterMapType((map[string]string)(nil), "p2.ServeRequest.HeadersEntry")
	proto.RegisterType((*ServeReply)(nil), "p2.ServeReply")
	proto.RegisterMapType((map[string]string)(nil), "p2.ServeReply.HeadersEntry")
}

func init() { proto.RegisterFile("protos/serve.proto", fileDescriptor_51df4688294909e2) }

var fileDescriptor_51df4688294909e2 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x51, 0xcf, 0x4a, 0xfc, 0x30,
	0x10, 0xfe, 0xa5, 0xdd, 0xfd, 0xed, 0x3a, 0x16, 0x59, 0x06, 0x0f, 0xa1, 0x22, 0x94, 0x9e, 0x7a,
	0xaa, 0x10, 0x11, 0x65, 0x3d, 0x2b, 0x9e, 0xe3, 0x13, 0x44, 0x77, 0x70, 0x8b, 0xb1, 0x8d, 0x49,
	0x5a, 0xe8, 0x53, 0xf9, 0x1c, 0xbe, 0x95, 0x34, 0xdb, 0xd5, 0xea, 0xc1, 0x93, 0xb7, 0xef, 0x9b,
	0x09, 0xdf, 0x9f, 0x0c, 0xa0, 0xb1, 0x8d, 0x6f, 0xdc, 0x99, 0x23, 0xdb, 0x51, 0x19, 0x08, 0x46,
	0x46, 0xe4, 0x6f, 0x0c, 0x92, 0xfb, 0x61, 0x26, 0xe9, 0xb5, 0x25, 0xe7, 0x91, 0xc3, 0xc2, 0x91,
	0x73, 0x55, 0x53, 0x73, 0x96, 0xb1, 0xe2, 0x40, 0xee, 0x29, 0xae, 0x20, 0x6e, 0xad, 0xe6, 0x51,
	0x98, 0x0e, 0x10, 0x2f, 0x61, 0xb1, 0x25, 0xb5, 0x21, 0xeb, 0x78, 0x9c, 0xc5, 0xc5, 0xa1, 0x38,
	0x2d, 0x8d, 0x28, 0xa7, 0x72, 0xe5, 0xdd, 0x6e, 0x7f, 0x53, 0x7b, 0xdb, 0xcb, 0xfd, 0xeb, 0x74,
	0x0d, 0xc9, 0x74, 0x31, 0x48, 0x3f, 0x53, 0x3f, 0x1a, 0x0e, 0x10, 0x8f, 0x61, 0xde, 0x29, 0xdd,
	0xd2, 0x68, 0xb7, 0x23, 0xeb, 0xe8, 0x8a, 0xe5, 0xef, 0x0c, 0x60, 0xb4, 0x30, 0xba, 0xff, 0x25,
	0x6f, 0x0a, 0xcb, 0x17, 0xe5, 0x1f, 0xb7, 0x55, 0xfd, 0x14, 0x54, 0x96, 0xf2, 0x93, 0x23, 0xc2,
	0x6c, 0xa3, 0xbc, 0xe2, 0x71, 0xc6, 0x8a, 0x44, 0x06, 0x8c, 0x17, 0x5f, 0x6d, 0x66, 0xa1, 0xcd,
	0xc9, 0xa4, 0x8d, 0xd1, 0xfd, 0xdf, 0x77, 0x11, 0xd7, 0x30, 0x0f, 0xfa, 0x28, 0x20, 0x91, 0xe4,
	0x6d, 0x45, 0x1d, 0xdd, 0x56, 0x9a, 0x70, 0xf5, 0xf3, 0x23, 0xd3, 0xa3, 0xef, 0x61, 0xf2, 0x7f,
	0x0f, 0xff, 0xc3, 0x15, 0xcf, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x1a, 0x11, 0x08, 0xdb,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServeClient is the client API for Serve service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServeClient interface {
	RetrieveFile(ctx context.Context, in *ServeRequest, opts ...grpc.CallOption) (*ServeReply, error)
}

type serveClient struct {
	cc *grpc.ClientConn
}

func NewServeClient(cc *grpc.ClientConn) ServeClient {
	return &serveClient{cc}
}

func (c *serveClient) RetrieveFile(ctx context.Context, in *ServeRequest, opts ...grpc.CallOption) (*ServeReply, error) {
	out := new(ServeReply)
	err := c.cc.Invoke(ctx, "/p2.Serve/RetrieveFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServeServer is the server API for Serve service.
type ServeServer interface {
	RetrieveFile(context.Context, *ServeRequest) (*ServeReply, error)
}

func RegisterServeServer(s *grpc.Server, srv ServeServer) {
	s.RegisterService(&_Serve_serviceDesc, srv)
}

func _Serve_RetrieveFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServeServer).RetrieveFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/p2.Serve/RetrieveFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServeServer).RetrieveFile(ctx, req.(*ServeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Serve_serviceDesc = grpc.ServiceDesc{
	ServiceName: "p2.Serve",
	HandlerType: (*ServeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RetrieveFile",
			Handler:    _Serve_RetrieveFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/serve.proto",
}
