apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "p2.fullname" . }}-config
data:
  config.yml: |
    databases:
      default:
        engine: django.db.backends.postgresql
        name: "{{ .Values.postgresql.postgresqlDatabase }}"
        user: "{{ .Values.postgresql.postgresqlUsername }}"
        password: "{{ .Values.postgresql.postgresqlPassword }}"
        host: "{{ .Release.Name }}-postgresql"
        port: ''

    cache: "redis://:{{ .Values.redis.password }}@{{ .Release.Name }}-redis-master/0"
    message_queue:
      broker: "amqp://p2:{{ .Values.rabbitmq.rabbitmq.password }}@{{ .Release.Name }}-rabbitmq"
      results: "rpc://"

    web:
      server.socket_host: 0.0.0.0
      server.socket_port: 8000
      server.thread_pool: 20
      log.screen: false
      log.access_file: ''
      log.error_file: ''
      # remove any limit on the request body size; cherrypys default is 100MB
      server.max_request_body_size: 0
      # increase server socket timeout to 60s; cherrypys defult is 10s
      server.socket_timeout: 600

    debug: false

    error_report_enabled: {{ .Values.config.error_reporting }}

    s3:
      base_domain: {{ (index .Values.ingress.hosts 0) | quote }}

    # Set this to true if you only want to use external authentication
    external_auth_only: {{ .Values.config.external_auth_only }}

    oidc:
      # Callback URL: <base url>/_/oidc/callback/
      enabled: false
      client_id: ""
      client_secret: ""
      auth_url: ""
      token_url: ""
      user_url: ""

    {{- if .Values.config.secret_key }}
    secret_key: {{ .Values.config.secret_key }}
    {{- else }}
    secret_key: {{ randAlphaNum 50 }}
    {{- end }}
