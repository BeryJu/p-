apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "p2.fullname" . }}-config
data:
  config.yml: |
    # Env for Docker images
    databases:
      default:
        engine: django.db.backends.postgresql
        name: "{{ .Values.postgresql.postgresqlDatabase }}"
        user: "{{ .Values.postgresql.postgresqlUsername }}"
        password: "{{ .Values.postgresql.postgresqlPassword }}"
        host: "{{ .Release.Name }}-postgresql"
        port: ''
    log:
      level:
        console: DEBUG
        file: DEBUG
      file: /dev/null
    email:
      host: localhost
      port: 25
      user: ''
      password: ''
      use_tls: false
      use_ssl: false
      from: p2 <p2@domain.tld>
    web:
      listen: 0.0.0.0
      port: 8000
      threads: 30
    debug: false

    rabbitmq: "p2:{{ .Values.rabbitmq.rabbitmq.password }}@{{ .Release.Name }}-rabbitmq"
    redis: ":{{ .Values.redis.password }}@{{ .Release.Name }}-redis-master/0"

    # Error reporting, disabled by default
    error_report_enabled: {{ .Values.config.error_reporting }}

    # Set this to this server's hostname or the external domain if behind a reverse proxy
    domains: {{ .Values.ingress.hosts }}

    # Set this to true if you only want to use external authentication
    external_auth_only: false

    # LDAP Authentication
    # ldap:
    #     enabled: false
    #     server:
    #         uri: 'ldap://dc1.example.com'
    #         tls: false
    #     bind:
    #         dn: ''
    #         password: ''
    #     search_base: ''
    #     filter: '(sAMAccountName=%(user)s)'
    #     require_group: ''

    {{- if .Values.config.secret_key }}
    secret_key: {{ .Values.config.secret_key }}
    {{- else }}
    secret_key: {{ randAlphaNum 50 }}
    {{- end }}
